WITH sq AS (
    SELECT 
        id, title,
        CASE 
            WHEN price <= 13 THEN 'cheap'
            WHEN price <= 17 THEN 'reasonable'
            WHEN price >17 THEN 'expensive'
        END AS price_group
    FROM books)
SELECT price_group, count(*) AS num_books
FROM sq
GROUP BY price_group;


SELECT *
FROM sorting
ORDER BY
    POSITION(numbername IN 'One, Two, Three, Four, Five, Six, Seven, Eight, Nine')
;



SELECT Date '2025-03-12' + INTERVAL '4' Month;


SELECT id, age(dob) AS full_age, extract(year from dob(age)) AS age_year
FROM customers;


SELECT id, title, (
    SELECT coalesce(given_name,'-')
    FROM authors
    WHERE authors.id = books.authorid) AS author
FROM books;


SELECT id, total,
    (SELECT sum(total) FROM sales AS ss
    WHERE ss.id <= sales.id) AS running_total
FROM sales
ORDER BY id;


SELECT DISTINCT customers.*
FROM customers JOIN sales ON customers.id = sales.customerid
WHERE sales.total >= 160;


SELECT *
FROM customers
WHERE id IN (
    SELECT customerid FROM sales
    GROUP BY customerid HAVING sum(total)>=2000)
;


CREATE TABLE customers (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(255) NOT NULL UNIQUE,
    family_name VARCHAR(255) NOT NULL,
    given_name VARCHAR(255) NOT NULL
);


INSERT INTO customers(
    family_name,
    given_name,
    email)
VALUES('Wang', 'Bryan', 'xxxxxd@gmail.com')
;